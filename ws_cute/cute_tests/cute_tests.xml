<testsuites>
	<testsuite name="all cute tests" tests="121">
		<testcase classname="all cute tests" name="thisIsAtest_cute_data_drivenTest"/>
		<testcase classname="all cute tests" name="test_cute_data_driven_test_iteration"/>
		<testcase classname="all cute tests" name="test_cute_data_driven_equality_demo"/>
		<testcase classname="all cute tests" name="test_cute_data_driven_equal_delta_demo"/>
		<testcase classname="all cute tests" name="test_cute_data_driven_less_demo"/>
		<testcase classname="all cute tests" name="test_cute_data_driven_greater_demo"/>
		<testcase classname="all cute tests" name="test_cute_data_driven_not_equal_to_demo"/>
		<testcase classname="all cute tests" name="test_cute_data_driven_less_equal_demo"/>
		<testcase classname="all cute tests" name="test_cute_data_driven_greater_equal_demo"/>
		<testcase classname="all cute tests" name="test_cute_assert_less_success"/>
		<testcase classname="all cute tests" name="test_cute_assert_less_fail"/>
		<testcase classname="all cute tests" name="test_cute_assert_greater_success"/>
		<testcase classname="all cute tests" name="test_cute_assert_greater_fail"/>
		<testcase classname="all cute tests" name="test_cute_assert_less_equal_success"/>
		<testcase classname="all cute tests" name="test_cute_assert_less_equal_fail"/>
		<testcase classname="all cute tests" name="test_cute_assert_greater_equal_fail"/>
		<testcase classname="all cute tests" name="test_cute_assert_greater_equal_success"/>
		<testcase classname="all cute tests" name="test_cute_assert_not_euqal_to_success"/>
		<testcase classname="all cute tests" name="test_cute_assert_not_equal_to_fail"/>
		<testcase classname="all cute tests" name="thisIsAtest_cute_filter_runnerTest"/>
		<testcase classname="all cute tests" name="test_cute_filter_runner_ArgvFilter"/>
		<testcase classname="all cute tests" name="test_emptyrun"/>
		<testcase classname="all cute tests" name="test_single_success"/>
		<testcase classname="all cute tests" name="test_single_failure"/>
		<testcase classname="all cute tests" name="test_xml_masking"/>
		<testcase classname="all cute tests" name="test_xml_suite"/>
		<testcase classname="all cute tests" name="test_for_error"/>
		<testcase classname="all cute tests" name="thisIsAtest_xml_file_openerTest"/>
		<testcase classname="all cute tests" name="test_xml_file_with_no_name"/>
		<testcase classname="all cute tests" name="test_xml_file_with_path"/>
		<testcase classname="all cute tests" name="test_embedded_to_string"/>
		<testcase classname="all cute tests" name="test_embedded_string_to_string"/>
		<testcase classname="all cute tests" name="test_embedded_charptr_to_string"/>
		<testcase classname="all cute tests" name="test_embedded_integral_to_string"/>
		<testcase classname="all cute tests" name="test_embedded_unsigned_to_string"/>
		<testcase classname="all cute tests" name="test_embedded_unsigned_long_to_string"/>
		<testcase classname="all cute tests" name="test_embedded_minint_to_string"/>
		<testcase classname="all cute tests" name="test_embedded_pointer_to_string"/>
		<testcase classname="all cute tests" name="test_embedded_unsigned_long_long_to_string"/>
		<testcase classname="all cute tests" name="test_embedded_integral_long_long_to_string"/>
		<testcase classname="all cute tests" name="test_tap_emptyrun"/>
		<testcase classname="all cute tests" name="test_tap_single_success"/>
		<testcase classname="all cute tests" name="test_tap_single_failure"/>
		<testcase classname="all cute tests" name="test_tap_suite"/>
		<testcase classname="all cute tests" name="test_tap_multiple_suites"/>
		<testcase classname="all cute tests" name="test_tap_for_error"/>
		<testcase classname="all cute tests" name="test_simple_to_string"/>
		<testcase classname="all cute tests" name="test_simple_string_to_string"/>
		<testcase classname="all cute tests" name="test_simple_char_array_to_string"/>
		<testcase classname="all cute tests" name="test_int_array_to_string"/>
		<testcase classname="all cute tests" name="test_byte_to_string"/>
		<testcase classname="all cute tests" name="test_pair_to_string"/>
		<testcase classname="all cute tests" name="test_tuple_to_string"/>
		<testcase classname="all cute tests" name="test_vector_pair_to_string"/>
		<testcase classname="all cute tests" name="test_set_to_string"/>
		<testcase classname="all cute tests" name="test_map_to_string"/>
		<testcase classname="all cute tests" name="test_multimap_to_string"/>
		<testcase classname="all cute tests" name="test_multiset_to_string"/>
		<testcase classname="all cute tests" name="test_vector_of_byte_to_string"/>
		<testcase classname="all cute tests" name="test_equals_float"/>
		<testcase classname="all cute tests" name="test_equals_double_zero"/>
		<testcase classname="all cute tests" name="test_equals_double_one_one_plus_eps"/>
		<testcase classname="all cute tests" name="test_equals_double_minusone_minusone_plus_eps"/>
		<testcase classname="all cute tests" name="test_equals_int_signed_char"/>
		<testcase classname="all cute tests" name="test_equals_int_double"/>
		<testcase classname="all cute tests" name="test_equals_float_unsigned_long"/>
		<testcase classname="all cute tests" name="test_equals_unsinged_minus_one_signed_minus_one"/>
		<testcase classname="all cute tests" name="test_equals_signed_limit_short"/>
		<testcase classname="all cute tests" name="test_equals_unsigned_limit_short"/>
		<testcase classname="all cute tests" name="test_equals_unsignedshortlimit_long"/>
		<testcase classname="all cute tests" name="test_equal_bool_bool"/>
		<testcase classname="all cute tests" name="test_equal_bool_int"/>
		<testcase classname="all cute tests" name="test_equal_int_bool"/>
		<testcase classname="all cute tests" name="test_equal_enum_int"/>
		<testcase classname="all cute tests" name="test_equals_double_with_numberic_limits"/>
		<testcase classname="all cute tests" name="test_has_end_member_for_vector"/>
		<testcase classname="all cute tests" name="test_not_has_end_member_for_int"/>
		<testcase classname="all cute tests" name="test_has_begin_end_member_for_string"/>
		<testcase classname="all cute tests" name="test_output_for_std_map"/>
		<testcase classname="all cute tests" name="test_output_for_std_pair"/>
		<testcase classname="all cute tests" name="test_output_for_std_tuple"/>
		<testcase classname="all cute tests" name="test_output_for_std_map_empty"/>
		<testcase classname="all cute tests" name="test_output_for_vector_pair"/>
		<testcase classname="all cute tests" name="test_output_for_vector_set_int_empty"/>
		<testcase classname="all cute tests" name="test_non_outputable"/>
		<testcase classname="all cute tests" name="test_doubleEqualsWithANaNFails"/>
		<testcase classname="all cute tests" name="test_backslashQuoteTabNewline"/>
		<testcase classname="all cute tests" name="test_equals_OK"/>
		<testcase classname="all cute tests" name="test_equals_int_fails"/>
		<testcase classname="all cute tests" name="test_assertEqualsDelta"/>
		<testcase classname="all cute tests" name="test_equals_double"/>
		<testcase classname="all cute tests" name="test_equals_double_fails"/>
		<testcase classname="all cute tests" name="test_equals_strings_fails"/>
		<testcase classname="all cute tests" name="test_diff_values"/>
		<testcase classname="all cute tests" name="test_equalsTwoNaNFails"/>
		<testcase classname="all cute tests" name="test_Customized_abs"/>
		<testcase classname="all cute tests" name="test_CustomizedEqualWithNon_bool_result"/>
		<testcase classname="all cute tests" name="test_SimpleTestFunctionThrows"/>
		<testcase classname="all cute tests" name="SimpleTestFunctionCalledTest"/>
		<testcase classname="all cute tests" name="test_shouldFailThrowsFailure"/>
		<testcase classname="all cute tests" name="test_that_fails_throws_failure"/>
		<testcase classname="all cute tests" name="test_that_throws_throws"/>
		<testcase classname="all cute tests" name="test_throws"/>
		<testcase classname="all cute tests" name="test_that_doesnt_throw_fails_when_expected_to_throws"/>
		<testcase classname="all cute tests" name="test_throws_with_code"/>
		<testcase classname="all cute tests" name="test_throws_with_message"/>
		<testcase classname="all cute tests" name="test_assert_throws_is_safe_against_throwing_test_failure"/>
		<testcase classname="all cute tests" name="test_assert_throws_with_demangling_error"/>
		<testcase classname="all cute tests" name="test_throws_with_message_shows_the_message"/>
		<testcase classname="all cute tests" name="test_repeated_test()"/>
		<testcase classname="all cute tests" name="test_cute_runner"/>
		<testcase classname="all cute tests" name="test_cute_suite_test()"/>
		<testcase classname="all cute tests" name="test_cute_suite"/>
		<testcase classname="all cute tests" name="test_lambda_suite"/>
		<testcase classname="all cute tests" name="test_cute_test_incarnate()"/>
		<testcase classname="all cute tests" name="test_cute_test()"/>
		<testcase classname="all cute tests" name="test_cute_testmember()"/>
		<testcase classname="all cute tests" name="test_cute()"/>
		<testcase classname="all cute tests" name="to_incarnate_without"/>
		<testcase classname="all cute tests" name="to_incarnate"/>
		<testcase classname="all cute tests" name="to_incarnate::operator()"/>
	</testsuite>
</testsuites>
